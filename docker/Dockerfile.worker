# Dockerfile.worker - Celery分散ワーカー
FROM python:3.13-slim

LABEL maintainer="sado-restaurant-map-team"
LABEL description="Celery worker for distributed processing"

# システム依存関係インストール
RUN apt-get update && apt-get install -y \
  gcc \
  g++ \
  git \
  curl \
  && rm -rf /var/lib/apt/lists/*

# 作業ディレクトリ設定
WORKDIR /app

# Python依存関係ファイルコピー
COPY tools/scraper/config/requirements.txt /app/requirements.txt

# Python パッケージインストール
RUN pip install --no-cache-dir -r requirements.txt

# 追加の分散処理依存関係
RUN pip install --no-cache-dir \
  celery[redis]==5.3.4 \
  "redis>=4.5.2,<5.0.0" \
  kombu==5.3.4

# アプリケーションコードコピー
COPY tools/scraper/ /app/
COPY src/ /app/src/

# ログディレクトリ作成
RUN mkdir -p /app/logs

# 環境変数設定
ENV PYTHONPATH=/app
ENV CELERY_BROKER_URL=redis://redis-master:6379/0
ENV CELERY_RESULT_BACKEND=redis://redis-master:6379/0
ENV CELERY_WORKER_CONCURRENCY=4
ENV CELERY_WORKER_MAX_TASKS_PER_CHILD=1000

# ヘルスチェック設定
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD celery -A shared.celery_config inspect ping -d celery@$HOSTNAME || exit 1

# 非root ユーザー作成
RUN useradd --create-home --shell /bin/bash celeryuser && \
  chown -R celeryuser:celeryuser /app
USER celeryuser

# デフォルトコマンド
CMD ["celery", "-A", "shared.celery_config", "worker", \
  "--loglevel=info", \
  "--concurrency=4", \
  "--max-tasks-per-child=1000", \
  "--time-limit=300", \
  "--soft-time-limit=240"]
