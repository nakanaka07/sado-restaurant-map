# Sado Restaurant Map - Data Platform Environment Configuration
# ==============================================================
#
# このファイルを .env にコピーして、実際のAPIキーを設定してください
# cp .env.example .env
#
# 設定後、以下のコマンドで設定確認ができます:
# python interface/cli/main.py --dry-run

# === 必須設定 ===

# Google Places API キー（必須）
# 取得方法: https://developers.google.com/maps/documentation/places/web-service/get-api-key
PLACES_API_KEY=your_google_places_api_key_here

# Google Sheets API サービスアカウントファイルパス（必須）
# config/service-account.json ファイルのパス
GOOGLE_SERVICE_ACCOUNT_PATH=config/service-account.json

# Google Sheets スプレッドシートID（必須）
# スプレッドシートURLの https://docs.google.com/spreadsheets/d/{SPREADSHEET_ID}/edit 部分
SPREADSHEET_ID=your_google_spreadsheet_id_here

# === オプション設定 ===

# API呼び出し間隔（秒）
# 推奨: 1.0-2.0（Google APIレート制限対応）
API_DELAY=1.0

# 並列処理ワーカー数
# 推奨: 1-3（高すぎるとAPI制限に抵触する可能性）
MAX_WORKERS=3

# API呼び出しレート制限（秒間）
RATE_LIMIT_PER_SECOND=10.0

# ログレベル
# 選択肢: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO

# === 高度な設定（Phase 3機能） ===

# Redis Cache設定（オプション）
# Redis使用時のみ設定
REDIS_URL=redis://localhost:6379
CACHE_TTL=86400

# Celery分散処理設定（オプション）
CELERY_BROKER_URL=redis://localhost:6379/1
CELERY_RESULT_BACKEND=redis://localhost:6379/2

# ML Engine設定
ML_MODEL_DIR=models
ML_ENABLE_TRAINING=false

# === 開発・デバッグ設定 ===

# デバッグモード
DEBUG_MODE=false

# 詳細ログ出力
VERBOSE_LOGGING=false

# テストモード（実際のAPI呼び出しを行わない）
TEST_MODE=false

# パフォーマンス監視有効化
ENABLE_PERFORMANCE_MONITORING=true

# === 環境別設定例 ===

# 開発環境例:
# API_DELAY=2.0
# MAX_WORKERS=1
# DEBUG_MODE=true
# LOG_LEVEL=DEBUG

# 本番環境例:
# API_DELAY=1.0
# MAX_WORKERS=3
# DEBUG_MODE=false
# LOG_LEVEL=INFO
