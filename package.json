{
  "name": "sado-restaurant-map",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "lint": "eslint . --config config/eslint.config.js",
    "lint:fix": "eslint . --config config/eslint.config.js --fix",
    "preview": "vite preview",
    "test": "vitest --config config/vitest.config.ts",
    "test:run": "vitest run --config config/vitest.config.ts",
    "test:coverage": "vitest run --coverage --config config/vitest.config.ts",
    "test:ui": "vitest --ui --config config/vitest.config.ts",
    "test:watch": "vitest --watch --config config/vitest.config.ts",
    "deploy": "pnpm run build && gh-pages -d dist",
    "predeploy": "pnpm run build",
    "generate:pwa-assets": "pwa-assets-generator --config config/pwa-assets.config.ts",
    "analyze:deps": "node tools/analysis/check-circular-deps.cjs",
    "analyze:coupling": "node tools/analysis/analyze-coupling.cjs",
    "analyze:all": "pnpm run analyze:deps && pnpm run analyze:coupling",
    "lint:md": "markdownlint \"*.md\" \"src/**/*.md\" \"docs/**/*.md\" \"tools/**/*.md\" \"config/**/*.md\" \"public/**/*.md\" --config .markdownlint.json --ignore-path .markdownlintignore",
    "lint:md:fix": "markdownlint \"*.md\" \"src/**/*.md\" \"docs/**/*.md\" \"tools/**/*.md\" \"config/**/*.md\" \"public/**/*.md\" --config .markdownlint.json --ignore-path .markdownlintignore --fix",
    "lint:md:docs": "markdownlint \"docs/**/*.md\" --config .markdownlint.json --ignore-path .markdownlintignore",
    "lint:all": "pnpm run lint && pnpm run lint:md",
    "lint:all:fix": "pnpm run lint:fix && pnpm run lint:md:fix",
    "quality:check": "pnpm run lint:all && pnpm run test:run",
    "quality:fix": "pnpm run lint:all:fix && pnpm run test:run",
    "env:check": "pwsh -NoProfile -ExecutionPolicy Bypass -Command \"[Console]::OutputEncoding = [System.Text.Encoding]::UTF8; & './tools/testing/check-environment.ps1'\"",
    "env:setup": "pwsh -NoProfile -ExecutionPolicy Bypass -Command \"[Console]::OutputEncoding = [System.Text.Encoding]::UTF8; & './tools/testing/check-environment.ps1' -Fix\"",
    "typecheck": "eslint . --config config/eslint.config.js --max-warnings 0",
    "clean": "rimraf dist dev-dist coverage .vite node_modules/.vite",
    "readme:sync": "tsx tools/automation/readme/tech-stack-sync.ts",
    "readme:links": "tsx tools/automation/readme/link-validator.ts",
    "readme:quality": "tsx tools/automation/readme/quality-checker.ts",
    "readme:automation": "tsx tools/automation/readme/automation-system.ts",
    "readme:fix": "tsx tools/automation/readme/automation-system.ts --fix",
    "readme:all": "tsx tools/automation/readme/automation-system.ts",
    "readme:weekly": "pwsh -NoProfile -ExecutionPolicy Bypass -Command \"[Console]::OutputEncoding = [System.Text.Encoding]::UTF8; & './tools/automation/reports/weekly-quality-report.ps1'\"",
    "readme:weekly:alert": "pwsh -NoProfile -ExecutionPolicy Bypass -Command \"[Console]::OutputEncoding = [System.Text.Encoding]::UTF8; & './tools/automation/reports/weekly-quality-report.ps1' -SendAlert\"",
    "automation:github:issues": "tsx tools/automation/github/issue-creator.ts",
    "automation:alerts": "tsx tools/automation/alerts/advanced-alert-system.ts",
    "automation:reports:detailed": "tsx tools/automation/reports/detailed-quality-reporter.ts",
    "automation:integrated": "tsx tools/automation/integrated-system.ts",
    "automation:integrated:fix": "tsx tools/automation/integrated-system.ts --auto-fix",
    "automation:health": "tsx tools/automation/integrated-system.ts --health",
    "integration:start": "pwsh -NoProfile -ExecutionPolicy Bypass -Command \"[Console]::OutputEncoding = [System.Text.Encoding]::UTF8; & './tools/testing/integration-test-manager.ps1' -Action start\"",
    "integration:test": "pwsh -NoProfile -ExecutionPolicy Bypass -Command \"[Console]::OutputEncoding = [System.Text.Encoding]::UTF8; & './tools/testing/integration-test-manager.ps1' -Action test -TestType all\"",
    "integration:stop": "pwsh -NoProfile -ExecutionPolicy Bypass -Command \"[Console]::OutputEncoding = [System.Text.Encoding]::UTF8; & './tools/testing/integration-test-manager.ps1' -Action stop\"",
    "integration:full": "pwsh -NoProfile -ExecutionPolicy Bypass -Command \"[Console]::OutputEncoding = [System.Text.Encoding]::UTF8; & './tools/testing/integration-test-manager.ps1' -Action full -TestType all\"",
    "integration:status": "pwsh -NoProfile -ExecutionPolicy Bypass -Command \"[Console]::OutputEncoding = [System.Text.Encoding]::UTF8; & './tools/testing/integration-test-manager.ps1' -Action status\"",
    "integration:cleanup": "pwsh -NoProfile -ExecutionPolicy Bypass -Command \"[Console]::OutputEncoding = [System.Text.Encoding]::UTF8; & './tools/testing/integration-test-manager.ps1' -Action cleanup\"",
    "docker:dev": "docker-compose -f docker/compose/development.yml up -d",
    "docker:integration": "docker-compose -f docker/compose/integration.yml up -d",
    "docker:production": "docker-compose -f docker/compose/production.yml up -d",
    "docker:experimental": "docker-compose -f docker/compose/experimental.yml up -d",
    "docker:down": "docker-compose -f docker/compose/development.yml down && docker-compose -f docker/compose/integration.yml down && docker-compose -f docker/compose/production.yml down && docker-compose -f docker/compose/experimental.yml down",
    "copilot:sync": "tsx tools/automation/copilot-sync.ts sync",
    "copilot:check": "tsx tools/automation/copilot-sync.ts check"
  },
  "dependencies": {
    "@types/google.maps": "^3.58.1",
    "@vis.gl/react-google-maps": "^1.5.5",
    "react": "^19.1.1",
    "react-dom": "^19.1.1"
  },
  "devDependencies": {
    "@eslint/js": "^9.35.0",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/node": "^24.3.1",
    "@types/react": "^19.1.12",
    "@types/react-dom": "^19.1.9",
    "@vite-pwa/assets-generator": "^1.0.0",
    "@vitejs/plugin-react": "^5.0.2",
    "@vitest/coverage-v8": "^3.2.4",
    "axios": "^1.11.0",
    "circular-dependency-plugin": "^5.2.2",
    "eslint": "^9.35.0",
    "eslint-plugin-react-hooks": "^5.0.0",
    "eslint-plugin-react-refresh": "^0.4.18",
    "gh-pages": "^6.3.0",
    "glob": "^11.0.3",
    "globals": "^16.3.0",
    "jsdom": "^26.1.0",
    "markdownlint-cli": "^0.45.0",
    "rimraf": "^6.0.1",
    "tsx": "^4.20.5",
    "typescript": "~5.7.3",
    "typescript-eslint": "^8.42.0",
    "vite": "^7.1.4",
    "vite-plugin-pwa": "^1.0.3",
    "vitest": "^3.2.4",
    "workbox-core": "^7.3.0",
    "workbox-window": "^7.3.0"
  }
}
