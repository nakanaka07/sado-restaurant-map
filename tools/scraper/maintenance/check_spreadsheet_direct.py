#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
„Çπ„Éó„É¨„ÉÉ„Éâ„Ç∑„Éº„ÉàÁõ¥Êé•Á¢∫Ë™ç„ÉÑ„Éº„É´

Êõ¥Êñ∞Âæå„ÅÆ„Éá„Éº„Çø„ÇíÁõ¥Êé•Á¢∫Ë™ç„Åó„Å¶„ÄÅÊõ¥Êñ∞„ÅåÊ≠£„Åó„ÅèÂèçÊò†„Åï„Çå„Å¶„ÅÑ„Çã„Åã„Çí„ÉÅ„Çß„ÉÉ„ÇØ„Åó„Åæ„Åô„ÄÇ
"""

import os
import sys
from pathlib import Path

# „Éë„Çπ„ÇíËøΩÂä†
current_dir = Path(__file__).parent
sys.path.append(str(current_dir))

from utils.google_auth import authenticate_google_sheets, validate_environment

def check_spreadsheet_directly():
    """„Çπ„Éó„É¨„ÉÉ„Éâ„Ç∑„Éº„Éà„ÅÆÂÜÖÂÆπ„ÇíÁõ¥Êé•Á¢∫Ë™ç"""
    
    print("üîç „Çπ„Éó„É¨„ÉÉ„Éâ„Ç∑„Éº„ÉàÁõ¥Êé•Á¢∫Ë™ç„ÉÑ„Éº„É´")
    print("=" * 60)
    
    # Áí∞Â¢ÉÂ§âÊï∞„ÅÆÁ¢∫Ë™ç
    if not validate_environment():
        print("‚ùå Áí∞Â¢ÉÂ§âÊï∞„ÅåË®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì")
        return
    
    # Google SheetsË™çË®º
    gc = authenticate_google_sheets()
    spreadsheet_id = os.getenv('SPREADSHEET_ID')
    
    try:
        spreadsheet = gc.open_by_key(spreadsheet_id)
        print(f"‚úÖ „Çπ„Éó„É¨„ÉÉ„Éâ„Ç∑„Éº„ÉàÊé•Á∂öÊàêÂäü: {spreadsheet.title}")
        
        # restaurants„Ç∑„Éº„Éà„ÇíË©≥„Åó„ÅèÁ¢∫Ë™ç
        sheet = spreadsheet.worksheet('restaurants')
        
        # „Éò„ÉÉ„ÉÄ„ÉºË°å„ÇíÂèñÂæó
        headers = sheet.row_values(1)
        print(f"\nüìã „Éò„ÉÉ„ÉÄ„ÉºÊÉÖÂ†±:")
        for i, header in enumerate(headers, 1):
            if header in ['Âú∞Âå∫', 'Google„Éû„ÉÉ„ÉóURL']:
                print(f"   Âàó{i:2d}: {header}")
        
        # ÊúÄÂàù„ÅÆ5Ë°å„ÅÆ„Çµ„É≥„Éó„É´„Éá„Éº„Çø„ÇíÂèñÂæó
        print(f"\nüìä „Çµ„É≥„Éó„É´„Éá„Éº„ÇøÔºàÊúÄÂàù„ÅÆ5Ë°åÔºâ:")
        sample_data = sheet.get_values('A1:AQ6')  # A-AQÂàóÔºà43ÂàóÔºâ„Åæ„Åß
        
        # Âú∞Âå∫„Å®Google„Éû„ÉÉ„ÉóURL„ÅÆÂàó„ÇíÁâπÂÆö
        district_col = None
        maps_url_col = None
        
        for i, header in enumerate(headers):
            if header == 'Âú∞Âå∫':
                district_col = i
            elif header == 'Google„Éû„ÉÉ„ÉóURL':
                maps_url_col = i
        
        print(f"\nüéØ Âú∞Âå∫„ÉªGoogle„Éû„ÉÉ„ÉóURLÁ¢∫Ë™ç:")
        print(f"   Âú∞Âå∫Âàó: {district_col + 1 if district_col is not None else 'N/A'}")
        print(f"   Google„Éû„ÉÉ„ÉóURLÂàó: {maps_url_col + 1 if maps_url_col is not None else 'N/A'}")
        
        if district_col is not None and maps_url_col is not None:
            for row_idx, row in enumerate(sample_data):
                if row_idx == 0:  # „Éò„ÉÉ„ÉÄ„ÉºË°å
                    continue
                
                if len(row) > max(district_col, maps_url_col):
                    store_name = row[1] if len(row) > 1 else 'N/A'
                    district = row[district_col] if len(row) > district_col else ''
                    maps_url = row[maps_url_col] if len(row) > maps_url_col else ''
                    
                    print(f"   Ë°å{row_idx + 1}: {store_name[:20]:<20} | Âú∞Âå∫: {district[:10]:<10} | URL: {maps_url[:30]:<30}")
        
        # ÂÖ®„Éá„Éº„Çø„ÅÆÁµ±Ë®à„ÇíÁ¢∫Ë™ç
        print(f"\nüìà ÂÖ®„Éá„Éº„ÇøÁµ±Ë®à:")
        all_data = sheet.get_all_values()
        total_rows = len(all_data) - 1  # „Éò„ÉÉ„ÉÄ„ÉºË°å„ÇíÈô§„Åè
        
        if district_col is not None and maps_url_col is not None:
            district_filled = 0
            maps_url_filled = 0
            
            for row in all_data[1:]:  # „Éò„ÉÉ„ÉÄ„ÉºË°å„Çí„Çπ„Ç≠„ÉÉ„Éó
                if len(row) > district_col and row[district_col].strip():
                    district_filled += 1
                if len(row) > maps_url_col and row[maps_url_col].strip():
                    maps_url_filled += 1
            
            print(f"   üìä Á∑è„É¨„Ç≥„Éº„ÉâÊï∞: {total_rows}")
            print(f"   üó∫Ô∏è Âú∞Âå∫ÂÖ•ÂäõÊ∏à„Åø: {district_filled}‰ª∂ ({district_filled/total_rows*100:.1f}%)")
            print(f"   üîó Google„Éû„ÉÉ„ÉóURLÂÖ•ÂäõÊ∏à„Åø: {maps_url_filled}‰ª∂ ({maps_url_filled/total_rows*100:.1f}%)")
        
        # ÂÖ∑‰ΩìÁöÑ„Å™ÂÄ§„ÅÆ„Çµ„É≥„Éó„É´„ÇíË°®Á§∫
        print(f"\nüìù ÂÆüÈöõ„ÅÆÂÄ§„Çµ„É≥„Éó„É´:")
        if len(all_data) > 1 and district_col is not None and maps_url_col is not None:
            for i in range(1, min(6, len(all_data))):  # ÊúÄÂàù„ÅÆ5‰ª∂
                row = all_data[i]
                if len(row) > max(district_col, maps_url_col):
                    store_name = row[1] if len(row) > 1 else 'N/A'
                    district = row[district_col] if len(row) > district_col else ''
                    maps_url = row[maps_url_col] if len(row) > maps_url_col else ''
                    
                    print(f"   Ë°å{i+1}: {store_name}")
                    print(f"      Âú∞Âå∫: '{district}'")
                    print(f"      URL:  '{maps_url}'")
                    print()
    
    except Exception as e:
        print(f"‚ùå „Ç®„É©„Éº: {e}")

def main():
    """„É°„Ç§„É≥ÂÆüË°å"""
    check_spreadsheet_directly()

if __name__ == "__main__":
    main()
