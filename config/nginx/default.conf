# デフォルトサーバー設定 - 佐渡飲食店マップ
server {
    listen 80;
    server_name localhost sado-restaurant-map.local;

    # セキュリティ
    server_tokens off;

    # ログ設定
    access_log /var/log/nginx/sado_access.log main;
    error_log /var/log/nginx/sado_error.log warn;

    # メインアプリケーション
    location / {
        proxy_pass http://sado_app_servers;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # タイムアウト
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # レート制限
        limit_req zone=static burst=50 nodelay;
    }

    # API エンドポイント
    location /api/ {
        proxy_pass http://sado_app_servers;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # API レート制限
        limit_req zone=api burst=20 nodelay;

        # CORS ヘッダー
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";
    }

    # 静的ファイル（キャッシュ最適化）
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://sado_app_servers;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;

        # 静的ファイルレート制限
        limit_req zone=static burst=100 nodelay;
    }

    # ヘルスチェック
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # 監視用エンドポイント
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 172.16.0.0/12;  # Docker ネットワーク
        deny all;
    }

    # エラーページ
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
